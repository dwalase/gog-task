@use "sass/utils/palette" as palette;

@mixin background-primary {
  background: linear-gradient(0deg, palette.$pink500 0%, palette.$pink400 100%);
}

@mixin background-secondary {
  background: var(--background-secondary);
}

@mixin box-shadow {
  box-shadow: 0 1px 5px 0 var(--shadow);
}

@mixin text-paragraph {
  font-size: rem(13px);
  line-height: 100%;
  letter-spacing: 0;
  font-weight: 600;
}

@mixin text-paragraph-large {
  @include text-paragraph;

  font-size: rem(14px);
}

@mixin text-paragraph-largest {
  @include text-paragraph;

  font-size: rem(15px);
}

@mixin text-header {
  font-weight: 700;
  font-size: rem(15px);
  line-height: 100%;
  letter-spacing: 0;
}

@mixin text-subheader {
  font-size: rem(14px);
  line-height: rem(17px);
  letter-spacing: 0;
  font-weight: 600;
}

@mixin text-white {
  color: var(--text-white);
}

@mixin text-primary {
  color: var(--text-primary);
}

@mixin text-secondary {
  color: var(--text-secondary);
}

@mixin ellipsis-lines($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin content-width {
  max-width: 1080px;
  width: 100%;
  padding: 0 20px;
}

@mixin mobile {
  @media (max-width:480px)  {
    @content;
  }
}

@function stripUnit($value) {
  @return $value / ($value * 0 + 1);
}

@function rem($pxValue) {
  @return #{stripUnit($pxValue) / stripUnit(16)}rem;
}
